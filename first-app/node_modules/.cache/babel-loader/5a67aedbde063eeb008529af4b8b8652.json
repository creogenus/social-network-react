{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\react-projects\\\\01-first-project\\\\first-app\\\\src\\\\Components\\\\common\\\\Paginator\\\\Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Paginator.module.css\";\nimport React, { useState } from \"react\";\n\nlet Paginator = props => {\n  _s();\n\n  let pageCount = Math.ceil(props.totalItemsCount / props.pageSize);\n  let pages = [];\n  let portionSize = 5;\n\n  for (let i = 1; i < pageCount + 1; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pageCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionNumber = (props.pageSize - 1) * (portionNumber - 1);\n  let rightPortionNumber = props.pageSize * portionNumber;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: pages.filter(p => leftPortionNumber <= p && rightPortionNumber >= p).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: props.currentPage === p && styles.selectedPage,\n        onClick: e => {\n          props.onPageChanged(p);\n        },\n        children: [p, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/Components/common/Paginator/Paginator.jsx"],"names":["styles","React","useState","Paginator","props","pageCount","Math","ceil","totalItemsCount","pageSize","pages","portionSize","i","push","portionCount","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","filter","p","map","currentPage","selectedPage","e","onPageChanged"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAGA,IAAIC,SAAS,GAAIC,KAAD,IAAU;AAAA;;AACtB,MAAIC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAhB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,WAAW,GAAG,CAAlB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAAS,GAAG,CAAhC,EAAmCO,CAAC,EAApC,EAAwC;AACpCF,IAAAA,KAAK,CAACG,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGR,IAAI,CAACC,IAAL,CAAUF,SAAS,GAACM,WAApB,CAAnB;AACA,MAAI,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIe,iBAAiB,GAAG,CAAEb,KAAK,CAACK,QAAN,GAAe,CAAjB,KAAqBM,aAAa,GAAC,CAAnC,CAAxB;AACA,MAAIG,kBAAkB,GAAKd,KAAK,CAACK,QAAR,GAAmBM,aAA5C;AACA,sBACI;AAAA,cACCL,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIH,iBAAiB,IAAEG,CAAnB,IAAwBF,kBAAkB,IAAEE,CAA9D,EAAiEC,GAAjE,CAAsED,CAAC,IAAI;AACpE,0BAAO;AAAM,QAAA,SAAS,EAAEhB,KAAK,CAACkB,WAAN,KAAsBF,CAAtB,IAA2BpB,MAAM,CAACuB,YAAnD;AAAiE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACpFpB,UAAAA,KAAK,CAACqB,aAAN,CAAoBL,CAApB;AACH,SAFM;AAAA,mBAEHA,CAFG;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJJ;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnBD;;GAAIjB,S;;KAAAA,S;AAqBJ,eAAeA,SAAf","sourcesContent":["import styles from \"./Paginator.module.css\";\r\nimport React,{useState} from \"react\";\r\n\r\n\r\nlet Paginator = (props) =>{\r\n    let pageCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    let portionSize = 5;\r\n    for (let i = 1; i < pageCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pageCount/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionNumber = ( props.pageSize-1)*(portionNumber-1)\r\n    let rightPortionNumber = ( props.pageSize)*(portionNumber)\r\n    return(\r\n        <span>\r\n        {pages.filter(p => leftPortionNumber<=p && rightPortionNumber>=p).map((p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage} onClick={(e) => {\r\n                    props.onPageChanged(p)\r\n                }}>{p} </span>\r\n            }))}</span>\r\n    )\r\n}\r\n\r\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}