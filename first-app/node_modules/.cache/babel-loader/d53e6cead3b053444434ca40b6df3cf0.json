{"ast":null,"code":"import{sendMessageActionCreator,updateNewMessageBody as _updateNewMessageBody}from\"../../redux/messages-reducer\";import Dialogs from\"./Dialogs\";import{connect}from\"react-redux\";import{withAuthRedirect}from\"../../hoc/withAuthRedirect\";import{compose}from\"redux\";var mapStateToProps=function mapStateToProps(state){return{DialogsProfiles:state.messagesPage.profiles,DialogsMessages:state.messagesPage.dialogs,newMessageBody:state.messagesPage.newMessageBody,isAuth:state.auth.isAuth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateNewMessageBody:function updateNewMessageBody(text){dispatch(_updateNewMessageBody(text));},sendMessage:function sendMessage(message){dispatch(sendMessageActionCreator(message));}};};export default compose(connect(mapStateToProps,mapDispatchToProps),withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/Components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageActionCreator","updateNewMessageBody","Dialogs","connect","withAuthRedirect","compose","mapStateToProps","state","DialogsProfiles","messagesPage","profiles","DialogsMessages","dialogs","newMessageBody","isAuth","auth","mapDispatchToProps","dispatch","text","sendMessage","message"],"mappings":"AAAA,OAAQA,wBAAR,CAAkCC,oBAAoB,GAApBA,CAAAA,qBAAlC,KAA6D,8BAA7D,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,gBAAR,KAA+B,4BAA/B,CACA,OAAQC,OAAR,KAAsB,OAAtB,CAGA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHC,eAAe,CAAED,KAAK,CAACE,YAAN,CAAmBC,QADjC,CAEHC,eAAe,CAAEJ,KAAK,CAACE,YAAN,CAAmBG,OAFjC,CAGHC,cAAc,CAAEN,KAAK,CAACE,YAAN,CAAmBI,cAHhC,CAIHC,MAAM,CAAEP,KAAK,CAACQ,IAAN,CAAWD,MAJhB,CAAP,CAMH,CAPD,CASA,GAAIE,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHhB,oBAAoB,CAAE,8BAACiB,IAAD,CAAU,CAC5BD,QAAQ,CAAChB,qBAAoB,CAACiB,IAAD,CAArB,CAAR,CACH,CAHE,CAIHC,WAAW,CAAE,qBAACC,OAAD,CAAa,CACtBH,QAAQ,CAACjB,wBAAwB,CAACoB,OAAD,CAAzB,CAAR,CACH,CANE,CAAP,CAQH,CATD,CAYA,cAAef,CAAAA,OAAO,CAClBF,OAAO,CAACG,eAAD,CAAkBU,kBAAlB,CADW,CAElBZ,gBAFkB,CAAP,CAGbF,OAHa,CAAf","sourcesContent":["import {sendMessageActionCreator, updateNewMessageBody} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsProfiles: state.messagesPage.profiles,\r\n        DialogsMessages: state.messagesPage.dialogs,\r\n        newMessageBody: state.messagesPage.newMessageBody,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (text) => {\r\n            dispatch(updateNewMessageBody(text))\r\n        },\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageActionCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"]},"metadata":{},"sourceType":"module"}