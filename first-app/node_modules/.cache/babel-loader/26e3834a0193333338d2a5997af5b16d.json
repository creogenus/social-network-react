{"ast":null,"code":"import { followAPI, getUsers, unfollowAPI } from \"../api/api\";\nexport const CHANGE_FOLLOW_STATUS = 'CHANGE-FOLLOW-STATUS';\nexport const SET_USERS = 'SET-USERS';\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nexport const TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING-IN-PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  isFollowingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_FOLLOW_STATUS:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userID) {\n              return { ...u,\n                followed: !u.followed\n              };\n            }\n\n            return u;\n          }),\n          ...state.users.location\n        };\n        return stateCopy;\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...action.users]\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\n      {\n        return { ...state,\n          isFollowingInProgress: action.isFetching ? [...state.isFollowingInProgress, action.userID] : state.isFollowingInProgress.filter(id => id != action.userID)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followChangeAC = userID => ({\n  type: CHANGE_FOLLOW_STATUS,\n  userID\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCountAC = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetchingAC = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsFollowingInProgress = (isFetching, userID) => ({\n  type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\n  isFetching,\n  userID\n});\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetchingAC(true));\n    getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsersAC(data.items));\n      dispatch(setTotalUsersCountAC(data.totalCount));\n      dispatch(toggleIsFetchingAC(false));\n    });\n  };\n};\nexport const followThunkCreator = user => {\n  return dispatch => {\n    dispatch(toggleIsFollowingInProgress(true, user.id));\n    followAPI(user).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(followChangeAC(user.id));\n      }\n\n      dispatch(toggleIsFollowingInProgress(false, user.id));\n    });\n  };\n};\nexport const unfollowThunkCreator = user => {\n  return dispatch => {\n    dispatch(toggleIsFollowingInProgress(true, user.id));\n    unfollowAPI(user).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(followChangeAC()(user.id));\n      }\n\n      dispatch(toggleIsFollowingInProgress(false, user.id));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/redux/users-reducer.js"],"names":["followAPI","getUsers","unfollowAPI","CHANGE_FOLLOW_STATUS","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","isFollowingInProgress","usersReducer","state","action","type","stateCopy","map","u","id","userID","followed","location","filter","followChangeAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","toggleIsFollowingInProgress","getUsersThunkCreator","dispatch","then","data","items","totalCount","followThunkCreator","user","resultCode","unfollowThunkCreator"],"mappings":"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","sourcesContent":["import {followAPI, getUsers, unfollowAPI} from \"../api/api\";\r\n\r\nexport const CHANGE_FOLLOW_STATUS = 'CHANGE-FOLLOW-STATUS';\r\nexport const SET_USERS = 'SET-USERS';\r\nexport const SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nexport const SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nexport const TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING-IN-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingInProgress: []\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_FOLLOW_STATUS: {\r\n\r\n            let stateCopy = {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: !u.followed}\r\n                    }\r\n                    return u;\r\n                }),\r\n                ...state.users.location\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                isFollowingInProgress: action.isFetching\r\n                    ? [...state.isFollowingInProgress, action.userID]\r\n                    : state.isFollowingInProgress.filter(id => id != action.userID)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followChangeAC = (userID) => ({type: CHANGE_FOLLOW_STATUS, userID})\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingInProgress = (isFetching, userID) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFetching,\r\n    userID\r\n})\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetchingAC(true));\r\n        getUsers(currentPage, pageSize).then(data => {\r\n\r\n            dispatch(setUsersAC(data.items));\r\n            dispatch(setTotalUsersCountAC(data.totalCount));\r\n            dispatch(toggleIsFetchingAC(false));\r\n        })\r\n    }\r\n}\r\n\r\nexport const followThunkCreator = (user) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingInProgress(true, user.id));\r\n        followAPI(user).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followChangeAC(user.id))\r\n\r\n            }\r\n           dispatch(toggleIsFollowingInProgress(false, user.id));\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollowThunkCreator = (user) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFollowingInProgress(true, user.id));\r\n        unfollowAPI(user).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followChangeAC()(user.id))\r\n            }\r\n           dispatch(toggleIsFollowingInProgress(false, user.id));\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}