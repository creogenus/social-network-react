{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\react-projects\\\\01-first-project\\\\first-app\\\\src\\\\Components\\\\Profile\\\\MyPosts\\\\MyPostsContainer.jsx\";\nimport classes from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport * as React from \"react\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nconst MyPostsContainer = props => {\n  let state = props.store.getState();\n\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    props.store.dispatch(updateNewPostTextActionCreator(text));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPost: addPost,\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyPostsContainer;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    updateNewPostText: text => {\n      dispatch(updateNewPostTextActionCreator(text));\n    }\n  };\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/Components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["classes","Post","React","addPostActionCreator","updateNewPostTextActionCreator","MyPosts","connect","MyPostsContainer","props","state","store","getState","addPost","dispatch","onPostChange","text","profilePage","posts","newPostText","mapStateToProps","mapDispatchToProps","updateNewPostText","MyPostContainer"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAAQC,oBAAR,EAA8BC,8BAA9B,QAAmE,gCAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IACzB;AACI,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAZ;;AACA,MAAIC,OAAO,GAAG,MAAM;AAEjBJ,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBV,oBAAoB,EAAzC;AACF,GAHD;;AAKA,MAAIW,YAAY,GAAIC,IAAD,IAAS;AACxBP,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBT,8BAA8B,CAACW,IAAD,CAAnD;AACH,GAFD;;AAIA,sBACI,QAAC,OAAD;AAAS,IAAA,iBAAiB,EAAID,YAA9B;AAA4C,IAAA,OAAO,EAAGF,OAAtD;AAA+D,IAAA,KAAK,EAAIH,KAAK,CAACO,WAAN,CAAkBC,KAA1F;AACA,IAAA,WAAW,EAAIR,KAAK,CAACO,WAAN,CAAkBE;AADjC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjBD;;KAAMX,gB;;AAmBN,MAAMY,eAAe,GAAIV,KAAD,IAAU;AAC9B,SAAM;AACFQ,IAAAA,KAAK,EAAER,KAAK,CAACO,WAAN,CAAkBC,KADvB;AAEFC,IAAAA,WAAW,EAAET,KAAK,CAACO,WAAN,CAAkBE;AAF7B,GAAN;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAIP,QAAD,IAAa;AACpC,SAAM;AACFD,IAAAA,OAAO,EAAE,MAAK;AAAEC,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AAAiC,KAD/C;AAEFkB,IAAAA,iBAAiB,EAAGN,IAAD,IAAS;AAACF,MAAAA,QAAQ,CAACT,8BAA8B,CAACW,IAAD,CAA/B,CAAR;AAA+C;AAF1E,GAAN;AAIH,CALD;;AAOA,MAAOO,eAAe,GAAGhB,OAAO,CAACa,eAAD,EAAiBC,kBAAjB,CAAP,CAA4Cf,OAA5C,CAAzB;AAEA,eAAeE,gBAAf","sourcesContent":["import classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport * as React from \"react\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MyPostsContainer = (props) =>\r\n{\r\n    let state = props.store.getState();\r\n    let addPost = () => {\r\n\r\n       props.store.dispatch(addPostActionCreator());\r\n    }\r\n\r\n    let onPostChange = (text) =>{\r\n        props.store.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    return(\r\n        <MyPosts updateNewPostText = {onPostChange} addPost ={addPost} posts = {state.profilePage.posts}\r\n        newPostText = {state.profilePage.newPostText}/>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: () =>{ dispatch(addPostActionCreator())},\r\n        updateNewPostText: (text) =>{dispatch(updateNewPostTextActionCreator(text))}\r\n    }\r\n}\r\n\r\nconst  MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}