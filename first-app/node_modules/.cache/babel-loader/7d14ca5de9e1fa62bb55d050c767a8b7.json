{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import style from'./Dialogs.module.css';import DialogItem from\"./DialogItem/DialogItem\";import MessageItem from\"./MessageItem/MesssageItem\";import{Redirect}from\"react-router-dom\";import AddMessage from\"./AddMessageForm/AddMessageForm\";var Dialogs=function Dialogs(props){var DialogMessages=props.DialogsMessages;var DialogsProfiles=props.DialogsProfiles;var DialogsElements=DialogsProfiles.map(function(profile){return/*#__PURE__*/_jsx(DialogItem,{name:profile.name,profile_id:profile.profile_id});});var MessagesElements=DialogMessages.map(function(message){return/*#__PURE__*/_jsx(MessageItem,{message:message.message});});var onSendMessageClick=function onSendMessageClick(){props.sendMessage();};var onChangeMessageBody=function onChangeMessageBody(e){var body=e.target.value;props.updateNewMessageBody(body);};if(!props.isAuth)return/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});return/*#__PURE__*/_jsxs(\"div\",{className:style.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:style.dialogsItems,children:/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(style.dialog,\" \").concat(style.active),children:DialogsElements})}),/*#__PURE__*/_jsxs(\"div\",{className:style.messages,children:[/*#__PURE__*/_jsx(\"div\",{className:style.message,children:MessagesElements}),/*#__PURE__*/_jsx(AddMessage,{sendMessage:props.sendMessage})]}),/*#__PURE__*/_jsx(\"div\",{})]});};export default Dialogs;","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/Components/Dialogs/Dialogs.jsx"],"names":["style","DialogItem","MessageItem","Redirect","AddMessage","Dialogs","props","DialogMessages","DialogsMessages","DialogsProfiles","DialogsElements","map","profile","name","profile_id","MessagesElements","message","onSendMessageClick","sendMessage","onChangeMessageBody","e","body","target","value","updateNewMessageBody","isAuth","dialogs","dialogsItems","dialog","active","messages"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,sBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,iCAAvB,CAIA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACtB,GAAIC,CAAAA,cAAc,CAAGD,KAAK,CAACE,eAA3B,CACA,GAAIC,CAAAA,eAAe,CAAGH,KAAK,CAACG,eAA5B,CACD,GAAIC,CAAAA,eAAe,CAAGD,eAAe,CAACE,GAAhB,CAAoB,SAACC,OAAD,qBAAa,KAAC,UAAD,EAAY,IAAI,CAAEA,OAAO,CAACC,IAA1B,CAAgC,UAAU,CAAED,OAAO,CAACE,UAApD,EAAb,EAApB,CAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAGR,cAAc,CAACI,GAAf,CAAmB,SAACK,OAAD,qBAAa,KAAC,WAAD,EAAc,OAAO,CAAIA,OAAO,CAACA,OAAjC,EAAb,EAAnB,CAAvB,CAGA,GAAIC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAK,CAC1BX,KAAK,CAACY,WAAN,GACH,CAFD,CAIA,GAAIC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,CAAD,CAAM,CAC5B,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAACE,MAAF,CAASC,KAApB,CACAjB,KAAK,CAACkB,oBAAN,CAA2BH,IAA3B,EACH,CAHD,CAIA,GAAI,CAACf,KAAK,CAACmB,MAAX,CAAmB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CACnB,mBACI,aAAK,SAAS,CAAEzB,KAAK,CAAC0B,OAAtB,wBACI,YAAK,SAAS,CAAE1B,KAAK,CAAC2B,YAAtB,uBACI,YAAK,SAAS,WAAK3B,KAAK,CAAC4B,MAAX,aAAqB5B,KAAK,CAAC6B,MAA3B,CAAd,UAAqDnB,eAArD,EADJ,EADJ,cAII,aAAK,SAAS,CAAEV,KAAK,CAAC8B,QAAtB,wBACI,YAAK,SAAS,CAAI9B,KAAK,CAACgB,OAAxB,UAAkCD,gBAAlC,EADJ,cAMI,KAAC,UAAD,EAAY,WAAW,CAAGT,KAAK,CAACY,WAAhC,EANJ,GAJJ,cAYI,cAZJ,GADJ,CAkBH,CAlCD,CAoCA,cAAeb,CAAAA,OAAf","sourcesContent":["import style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MesssageItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessage from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n     let DialogMessages = props.DialogsMessages;\r\n     let DialogsProfiles = props.DialogsProfiles;\r\n    let DialogsElements = DialogsProfiles.map((profile) => <DialogItem name={profile.name} profile_id={profile.profile_id}/>);\r\n    let MessagesElements = DialogMessages.map((message) => <MessageItem  message = {message.message}/>\r\n    );\r\n\r\n    let onSendMessageClick = () =>{\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onChangeMessageBody = (e) =>{\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                <div className={`${style.dialog} ${style.active}`} >{DialogsElements}</div>\r\n            </div>\r\n            <div className={style.messages}>\r\n                <div className = {style.message}>{MessagesElements}</div>\r\n               {/* <textarea value = {props.newMessageBody} placeholder='Введите сообщение' onChange={onChangeMessageBody}></textarea>\r\n                <div>\r\n                    <button onClick={onSendMessageClick}>Добавить сообщение</button>\r\n                </div>*/}\r\n                <AddMessage sendMessage ={props.sendMessage} ></AddMessage>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}