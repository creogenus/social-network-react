{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nexport const ADD_POST = 'ADD-POST';\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE';\nexport const GET_USER_STATUS = 'GET-USER-STATUS';\nexport const DELETE_POST = 'DELETE-POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'My Last post!',\n    likes_count: 22\n  }, {\n    id: 2,\n    message: 'My First post!',\n    likes_count: 10\n  }],\n  profile: null,\n  status: \"ALOXA\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 3,\n          message: action.post,\n          likes_count: 1\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.posts = [...state.posts];\n        stateCopy.posts.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.newText;\n        return stateCopy;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case GET_USER_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(post => post.id != action.postID)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostActionCreator = post => {\n  return {\n    type: ADD_POST,\n    post\n  };\n};\nexport let updateNewPostTextActionCreator = newText => {\n  return {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: newText\n  };\n};\nexport let deletePostActionCreator = postID => {\n  return {\n    type: DELETE_POST,\n    postID\n  };\n};\nexport let setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile\n  };\n};\nexport let getUserStatus = status => {\n  return {\n    type: GET_USER_STATUS,\n    status\n  };\n};\nexport let getUserStatusThunkCreator = userID => {\n  return dispatch => {\n    profileAPI.getUsersStatus(userID).then(response => {\n      dispatch(getUserStatus(response.data));\n    });\n  };\n};\nexport let postUserStatusThunkCreator = status => dispatch => {\n  profileAPI.postUsersStatus(status).then(response => {\n    dispatch(getUserStatus(status));\n  });\n};\nexport const setUserProfileThunkCreator = userID => {\n  return dispatch => {\n    profileAPI.setUserProfile(userID).then(response => {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["D:/react-projects/01-first-project/first-app/src/redux/profile-reducer.js"],"names":["profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","GET_USER_STATUS","DELETE_POST","initialState","posts","id","message","likes_count","profile","status","profileReducer","state","action","type","newPost","post","stateCopy","push","newPostText","newText","filter","postID","addPostActionCreator","updateNewPostTextActionCreator","deletePostActionCreator","setUserProfile","getUserStatus","getUserStatusThunkCreator","userID","dispatch","getUsersStatus","then","response","data","postUserStatusThunkCreator","postUsersStatus","setUserProfileThunkCreator"],"mappings":"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","sourcesContent":["import {profileAPI} from \"../api/api\";\r\n\r\nexport const ADD_POST = 'ADD-POST'\r\nexport const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\r\nexport const SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nexport const GET_USER_STATUS = 'GET-USER-STATUS'\r\nexport const DELETE_POST = 'DELETE-POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'My Last post!', likes_count: 22},\r\n        {id: 2, message: 'My First post!', likes_count: 10}\r\n    ],\r\n    profile: null,\r\n    status: \"ALOXA\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.post,\r\n                likes_count: 1\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts];\r\n            stateCopy.posts.push(newPost)\r\n            stateCopy.newPostText = '';\r\n            return stateCopy;\r\n        }\r\n\r\n        case  UPDATE_NEW_POST_TEXT: {\r\n            let stateCopy = {...state};\r\n\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case GET_USER_STATUS: {\r\n\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST:{\r\n            return {...state, posts: state.posts.filter(post => post.id != action.postID)}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let addPostActionCreator = (post) => {\r\n\r\n    return {\r\n        type: ADD_POST,\r\n        post\r\n    }\r\n};\r\n\r\nexport let updateNewPostTextActionCreator = (newText) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText: newText\r\n    }\r\n};\r\n\r\nexport let deletePostActionCreator= (postID) =>{\r\n    return{\r\n        type: DELETE_POST,\r\n        postID\r\n    }\r\n}\r\n\r\nexport let setUserProfile = (profile) => {\r\n\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\n\r\nexport let getUserStatus = (status) => {\r\n    return {\r\n        type: GET_USER_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport let getUserStatusThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n        profileAPI.getUsersStatus(userID).then(response => {\r\n                dispatch(getUserStatus(response.data))\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport let postUserStatusThunkCreator = (status) => (dispatch) => {\r\n    profileAPI.postUsersStatus(status).then(response => {\r\n            dispatch(getUserStatus(status))\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const setUserProfileThunkCreator = (userID) => {\r\n    return (dispatch) => {\r\n\r\n        profileAPI.setUserProfile(userID).then(response => {\r\n\r\n            dispatch(setUserProfile(response.data));\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}